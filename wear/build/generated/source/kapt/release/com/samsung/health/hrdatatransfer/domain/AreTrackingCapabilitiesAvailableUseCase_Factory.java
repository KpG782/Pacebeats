// Generated by Dagger (https://dagger.dev).
package com.samsung.health.hrdatatransfer.domain;

import com.samsung.health.hrdatatransfer.data.TrackingRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AreTrackingCapabilitiesAvailableUseCase_Factory implements Factory<AreTrackingCapabilitiesAvailableUseCase> {
  private final Provider<TrackingRepository> trackingRepositoryProvider;

  public AreTrackingCapabilitiesAvailableUseCase_Factory(
      Provider<TrackingRepository> trackingRepositoryProvider) {
    this.trackingRepositoryProvider = trackingRepositoryProvider;
  }

  @Override
  public AreTrackingCapabilitiesAvailableUseCase get() {
    return newInstance(trackingRepositoryProvider.get());
  }

  public static AreTrackingCapabilitiesAvailableUseCase_Factory create(
      Provider<TrackingRepository> trackingRepositoryProvider) {
    return new AreTrackingCapabilitiesAvailableUseCase_Factory(trackingRepositoryProvider);
  }

  public static AreTrackingCapabilitiesAvailableUseCase newInstance(
      TrackingRepository trackingRepository) {
    return new AreTrackingCapabilitiesAvailableUseCase(trackingRepository);
  }
}
